#pragma checksum "D:\GitRepos\BlazorSentimentAnalysis\BlazorSentimentAnalysis.Client\Pages\Review.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "84c000a7bb8c786b533e0ae519f3566b5b28f5f7"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorSentimentAnalysis.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorSentimentAnalysis.Client;
    using BlazorSentimentAnalysis.Client.Shared;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public class Review : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 18 "D:\GitRepos\BlazorSentimentAnalysis\BlazorSentimentAnalysis.Client\Pages\Review.razor"
            
    float happiness = 50; // 0=worst, 100=best

    async void UpdateScoreAsync(UIChangeEventArgs evt)
    {
        string targetText = (string)evt.Value;

        //Make a real call to Sentiment service
        happiness = await PredictSentimentAsync(targetText);
    }

    private async Task<float> PredictSentimentAsync(string targetText)
    {
        string url = $"api/Sentiment/sentimentprediction?sentimentText={targetText}";

        float percentage = await Http.GetJsonAsync<float>(url);

        return percentage;
    }

    // Sample test without ML.NET model
    //
    //void UpdateScore(UIChangeEventArgs evt)
    //{
    //    string targetText = (string)evt.Value;

    //    //Random percentage
    //    Random random = new Random();
    //    happiness = random.Next(0, 100);
    //}

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
